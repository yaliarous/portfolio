{"version":3,"file":"static/js/785.45d62531.chunk.js","mappings":"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","sources":["components/Footer/index.js","components/Heading/index.js","components/Image/index.js","components/Link/index.js","components/ProjectLayout/index.js","components/Section/index.js","components/Text/index.js","pages/Slice/index.js","utils/image.js"],"sourcesContent":["import Link from 'components/Link';\nimport './index.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <span className=\"footer__date\">\n      {`© ${new Date().getFullYear()} Mohamed ALI AROUS.`}\n    </span>\n    <Link secondary className=\"footer__link\" href=\"/humans.txt\" target=\"_self\">\n      Crafted by yours truly\n    </Link>\n  </footer>\n);\n\nexport default Footer;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport { Button } from 'components/Button';\nimport Icon from 'components/Icon';\nimport { Transition } from 'react-transition-group';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport { msToNum, numToMs } from 'utils/style';\nimport { resolveVideoSrcFromSrcSet } from 'utils/image';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport './index.css';\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n  const { themeId } = useTheme();\n  const containerRef = useRef();\n  const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'));\n\n  const onLoad = useCallback(() => {\n    setLoaded(true);\n  }, []);\n\n  return (\n    <div\n      className={classNames('image', className, `image--${themeId}`, {\n        'image--in-viewport': inViewport,\n        'image--reveal': reveal,\n        'image--raised': raised,\n      })}\n      style={{ ...style, '--delay': numToMs(delay) }}\n      ref={containerRef}\n    >\n      <ImageElements\n        delay={delay}\n        onLoad={onLoad}\n        loaded={loaded}\n        inViewport={inViewport}\n        reveal={reveal}\n        src={src}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nconst ImageElements = ({\n  onLoad,\n  loaded,\n  inViewport,\n  srcSet,\n  placeholder,\n  delay,\n  src,\n  alt,\n  play = true,\n  reveal,\n  ...rest\n}) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [playing, setPlaying] = useState(!prefersReducedMotion);\n  const [showPlayButton, setShowPlayButton] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [placeholderSize, setPlaceholderSize] = useState();\n  const [videoSrc, setVideoSrc] = useState();\n  const placeholderRef = useRef();\n  const videoRef = useRef();\n  const isVideo = src?.endsWith('.mp4');\n  const imgSrc = src || srcSet?.split(' ')[0];\n  const showFullRes = !prerender && inViewport;\n\n  useEffect(() => {\n    const purgePlaceholder = () => {\n      setShowPlaceholder(false);\n    };\n\n    const placeholderElement = placeholderRef.current;\n    placeholderElement.addEventListener('transitionend', purgePlaceholder);\n\n    return function cleanUp() {\n      if (placeholderElement) {\n        placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const resolveVideoSrc = async () => {\n      const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet);\n      setVideoSrc(resolvedVideoSrc);\n    };\n\n    if (isVideo && srcSet) {\n      resolveVideoSrc();\n    } else if (isVideo) {\n      setVideoSrc(src);\n    }\n  }, [isVideo, src, srcSet]);\n\n  useEffect(() => {\n    const { width, height } = placeholderRef.current;\n\n    if (width && height) {\n      setPlaceholderSize({ width, height });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!videoRef.current || !videoSrc) return;\n\n    if (!play || !inViewport) {\n      setPlaying(false);\n      videoRef.current.pause();\n    } else if (inViewport && !prefersReducedMotion && !prerender) {\n      setPlaying(true);\n      videoRef.current.play();\n    }\n  }, [inViewport, play, prefersReducedMotion, videoSrc]);\n\n  const handlePlaceholderLoad = event => {\n    const { width, height } = event.target;\n    setPlaceholderSize({ width, height });\n  };\n\n  const togglePlaying = event => {\n    event.preventDefault();\n\n    if (videoRef.current.paused) {\n      setPlaying(true);\n      videoRef.current.play();\n    } else {\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  };\n\n  const handleShowPlayButton = () => {\n    setShowPlayButton(true);\n    setIsHovered(true);\n  };\n\n  const handleFocusPlayButton = () => {\n    setShowPlayButton(true);\n    setIsFocused(true);\n  };\n\n  return (\n    <div\n      className={classNames('image__element-wrapper', {\n        'image__element-wrapper--reveal': reveal,\n        'image__element-wrapper--in-viewport': inViewport,\n      })}\n      onMouseOver={isVideo ? handleShowPlayButton : undefined}\n      onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n      style={{ '--delay': numToMs(delay + 1000) }}\n    >\n      {isVideo && (\n        <Fragment>\n          <video\n            muted\n            loop\n            playsInline\n            className={classNames('image__element', { 'image__element--loaded': loaded })}\n            autoPlay={!prefersReducedMotion}\n            role=\"img\"\n            onLoadStart={onLoad}\n            src={videoSrc}\n            aria-label={alt}\n            ref={videoRef}\n            {...rest}\n          />\n          <Transition\n            in={isHovered || isFocused}\n            onExit={reflow}\n            onExited={() => setShowPlayButton(false)}\n            timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n          >\n            {status => (\n              <VisuallyHidden visible={showPlayButton}>\n                <Button\n                  className={classNames('image__button', `image__button--${status}`)}\n                  onFocus={handleFocusPlayButton}\n                  onBlur={() => setIsFocused(false)}\n                  onClick={togglePlaying}\n                >\n                  <Icon icon={playing ? 'pause' : 'play'} />\n                  {playing ? 'Pause' : 'Play'}\n                </Button>\n              </VisuallyHidden>\n            )}\n          </Transition>\n        </Fragment>\n      )}\n      {!isVideo && (\n        <img\n          className={classNames('image__element', { 'image__element--loaded': loaded })}\n          onLoad={onLoad}\n          decoding=\"async\"\n          src={showFullRes ? imgSrc : undefined}\n          srcSet={showFullRes ? srcSet : undefined}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          alt={alt}\n          {...rest}\n        />\n      )}\n      {showPlaceholder && (\n        <img\n          aria-hidden\n          className={classNames('image__placeholder', {\n            'image__placeholder--loaded': loaded,\n          })}\n          style={{ '--delay': numToMs(delay) }}\n          ref={placeholderRef}\n          src={placeholder}\n          onLoad={handlePlaceholderLoad}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          decoding=\"async\"\n          alt=\"\"\n          role=\"presentation\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import { Link as RouterLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { blurOnMouseUp } from 'utils/focus';\nimport './index.css';\n\n// File extensions that can be linked to\nconst VALID_EXT = ['txt', 'png', 'jpg'];\n\nconst Link = ({ rel, target, children, secondary, className, href, as, ...rest }) => {\n  const isValidExtension = VALID_EXT.includes(href?.split('.').pop());\n  const isAnchor = href?.includes('://') || href?.[0] === '#' || isValidExtension;\n  const relValue = rel || (isAnchor ? 'noreferrer noopener' : undefined);\n  const targetValue = target || (isAnchor ? '_blank' : undefined);\n  const Component = as || (isAnchor ? 'a' : RouterLink);\n\n  return (\n    <Component\n      className={classNames('link', className, { 'link--secondary': secondary })}\n      rel={relValue}\n      href={isAnchor ? href : undefined}\n      to={!isAnchor ? href : undefined}\n      target={targetValue}\n      onMouseUp={blurOnMouseUp}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Link;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport Image from 'components/Image';\nimport { Button } from 'components/Button';\nimport { useParallax } from 'hooks';\nimport prerender from 'utils/prerender';\nimport Section from 'components/Section';\nimport { numToPx, numToMs } from 'utils/style';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst initDelay = 300;\n\nexport function ProjectHeader({\n  title,\n  description,\n  linkLabel = 'Visit website',\n  url,\n  roles,\n  className,\n}) {\n  return (\n    <Section className={classNames('project__header', className)}>\n      <div\n        className=\"project__header-content\"\n        style={{ '--initDelay': numToMs(initDelay) }}\n      >\n        <div className=\"project__details\">\n          <Heading\n            className={classNames('project__title', {\n              'project__title--entered': !prerender,\n            })}\n            level={2}\n            as=\"h1\"\n          >\n            {title}\n          </Heading>\n          <Text\n            className={classNames('project__description', {\n              'project__description--entered': !prerender,\n            })}\n            size=\"xl\"\n          >\n            {description}\n          </Text>\n          {!!url && (\n            <Button\n              secondary\n              iconHoverShift\n              className={classNames('project__link-button', {\n                'project__link-button--entered': !prerender,\n              })}\n              icon=\"chevronRight\"\n              href={url}\n            >\n              {linkLabel}\n            </Button>\n          )}\n        </div>\n        {!!roles?.length && (\n          <ul className=\"project__meta\">\n            {roles?.map((role, index) => (\n              <li\n                className={classNames('project__meta-item', {\n                  'project__meta-item--entered': !prerender,\n                })}\n                style={{ '--delay': numToMs(initDelay + 300 + index * 140) }}\n                key={role}\n              >\n                <Text secondary as=\"span\">\n                  {role}\n                </Text>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </Section>\n  );\n}\n\nexport const ProjectContainer = ({ className, ...rest }) => (\n  <article className={classNames('project', className)} {...rest} />\n);\n\nexport const ProjectSection = forwardRef(\n  (\n    {\n      className,\n      light,\n      first,\n      fullHeight,\n      backgroundOverlayOpacity = 0.9,\n      backgroundElement,\n      children,\n      ...rest\n    },\n    ref\n  ) => (\n    <section\n      className={classNames('project__section', className, {\n        'project__section--light': light,\n        'project__section--full-height': fullHeight,\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {!!backgroundElement && (\n        <div\n          className=\"project__section-background\"\n          style={{ '--opacity': backgroundOverlayOpacity }}\n        >\n          {backgroundElement}\n        </div>\n      )}\n      <Section\n        className={classNames('project__section-inner', {\n          'project__section-inner--first': first,\n        })}\n      >\n        {children}\n      </Section>\n    </section>\n  )\n);\n\nexport const ProjectBackground = ({ opacity = 0.7, className, entered, ...rest }) => {\n  const offset = useParallax(0.6);\n\n  return (\n    <div\n      className={classNames('project__background-image', className, {\n        'project__background-image--entered': entered,\n      })}\n    >\n      <div\n        className=\"project__background-image-element\"\n        style={{\n          '--offset': numToPx(offset),\n        }}\n      >\n        <Image alt=\"\" role=\"presentation\" {...rest} />\n      </div>\n      <div className=\"project__background-scrim\" style={{ '--opacity': opacity }} />\n    </div>\n  );\n};\n\nexport const ProjectImage = ({ className, ...rest }) => (\n  <div className={classNames('project__image', className)}>\n    <Image reveal delay={300} {...rest} />\n  </div>\n);\n\nexport const ProjectSectionContent = ({ className, width = 'l', ...rest }) => (\n  <div\n    className={classNames(\n      'project__section-content',\n      `project__section-content--width-${width}`,\n      className\n    )}\n    {...rest}\n  />\n);\n\nexport const ProjectSectionHeading = ({ className, level = 3, as = 'h2', ...rest }) => (\n  <Heading\n    className={classNames('project__section-heading', className)}\n    as={as}\n    level={level}\n    align=\"auto\"\n    {...rest}\n  />\n);\n\nexport const ProjectSectionText = ({ className, ...rest }) => (\n  <Text className={classNames('project__section-text', className)} size=\"l\" {...rest} />\n);\n\nexport const ProjectTextRow = ({\n  center,\n  stretch,\n  justify = 'center',\n  width = 'm',\n  noMargin,\n  className,\n  centerMobile,\n  ...rest\n}) => (\n  <div\n    className={classNames(\n      'project__text-row',\n      `project__text-row--justify-${justify}`,\n      `project__text-row--width-${width}`,\n      className,\n      {\n        'project__text-row--center': center,\n        'project__text-row--stretch': stretch,\n        'project__text-row--center-mobile': centerMobile,\n        'project__text-row--no-margin': noMargin,\n      }\n    )}\n    {...rest}\n  />\n);\n\nexport const ProjectSectionColumns = ({ className, centered, ...rest }) => (\n  <ProjectSectionContent\n    className={classNames(\n      'project__section-columns',\n      { 'project__section-columns--centered': centered },\n      className\n    )}\n    {...rest}\n  />\n);\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport './index.css';\n\nconst Section = forwardRef(\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\n      {children}\n    </Component>\n  )\n);\n\nexport default Section;\n","import classNames from 'classnames';\nimport './index.css';\n\nconst Text = ({\n  children,\n  size = 'm',\n  as: Component = 'p',\n  align = 'auto',\n  weight = 'auto',\n  secondary,\n  className,\n  ...rest\n}) => {\n  return (\n    <Component\n      className={classNames(\n        className,\n        'text',\n        `text--align-${align}`,\n        `text--size-${size}`,\n        `text--weight-${weight}`,\n        {\n          'text--secondary': secondary,\n        }\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n","import { Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Image from 'components/Image';\nimport { useScrollRestore } from 'hooks';\nimport Footer from 'components/Footer';\nimport {\n  ProjectContainer,\n  ProjectSection,\n  ProjectSectionContent,\n  ProjectImage,\n  ProjectTextRow,\n  ProjectSectionHeading,\n  ProjectSectionText,\n  ProjectBackground,\n  ProjectHeader,\n  ProjectSectionColumns,\n} from 'components/ProjectLayout';\nimport sliceBackground from 'assets/slice-background.jpg';\nimport sliceBackgroundLarge from 'assets/slice-background-large.jpg';\nimport sliceBackgroundPlaceholder from 'assets/slice-background-placeholder.jpg';\nimport sliceApp from 'assets/slice-app.jpg';\nimport sliceAppLarge from 'assets/slice-app-large.jpg';\nimport sliceAppPlaceholder from 'assets/slice-app-placeholder.jpg';\nimport sliceSidebarLayers from 'assets/slice-sidebar-layers.png';\nimport sliceSidebarLayersLarge from 'assets/slice-sidebar-layers-large.png';\nimport sliceSidebarLayersPlaceholder from 'assets/slice-sidebar-layers-placeholder.png';\nimport sliceSidebarAnnotations from 'assets/slice-sidebar-annotations.png';\nimport sliceSidebarAnnotationsLarge from 'assets/slice-sidebar-annotations-large.png';\nimport sliceSidebarAnnotationsPlaceholder from 'assets/slice-sidebar-annotations-placeholder.png';\nimport sliceSlides from 'assets/slice-slides.jpg';\nimport sliceSlidesLarge from 'assets/slice-slides-large.jpg';\nimport sliceSlidesPlaceholder from 'assets/slice-slides-placeholder.jpg';\nimport sliceBackgroundBar from 'assets/slice-background-bar.jpg';\nimport sliceBackgroundBarLarge from 'assets/slice-background-bar-large.jpg';\nimport sliceBackgroundBarPlaceholder from 'assets/slice-background-bar-placeholder.jpg';\nimport sliceAnnotation from 'assets/slice-annotation.png';\nimport sliceAnnotationLarge from 'assets/slice-annotation-large.png';\nimport sliceAnnotationPlaceholder from 'assets/slice-annotation-placeholder.png';\nimport prerender from 'utils/prerender';\nimport { media } from 'utils/style';\nimport './index.css';\n\nconst title = 'Biomedical image collaboration';\nconst description =\n  'This project involved designing a better way for biomedical educators and learners to annotate digital slides together.';\nconst roles = ['User Research', 'UX Design', 'Interface Design'];\n\nconst ProjectSlice = () => {\n  useScrollRestore();\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>{`Projects | ${title}`}</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n      <ProjectContainer className=\"slice\">\n        <ProjectBackground\n          srcSet={`${sliceBackground} 1280w, ${sliceBackgroundLarge} 2560w`}\n          placeholder={sliceBackgroundPlaceholder}\n          opacity={0.8}\n          entered={!prerender}\n        />\n        <ProjectHeader\n          title={title}\n          description={description}\n          url=\"https://www.best.edu.au/s/q2yjjvl7?data=8%404!9%4020303!10%40-15087&version=1\"\n          roles={roles}\n        />\n        <ProjectSection first>\n          <ProjectSectionContent>\n            <ProjectImage\n              srcSet={`${sliceApp} 800w, ${sliceAppLarge} 1920w`}\n              placeholder={sliceAppPlaceholder}\n              alt=\"The Slice web application showing a selected user annotation.\"\n              sizes={`(max-width: ${media.mobile}px) 100vw, (max-width: ${media.tablet}px) 90vw, 80vw`}\n            />\n          </ProjectSectionContent>\n        </ProjectSection>\n        <ProjectSection>\n          <ProjectSectionColumns centered className=\"slice__columns\">\n            <div className=\"sidebar__images-text\">\n              <ProjectSectionHeading>Bringing it together</ProjectSectionHeading>\n              <ProjectSectionText>\n                Teachers needed a better way to create collaborative group activities by\n                annotating slides on Slice. Before starting this project, a layer could\n                only be annotated by a single user, making it difficult for learners to\n                work together.\n              </ProjectSectionText>\n              <ProjectSectionText>\n                Our solution was to allow users to be invited to a layer, where they can\n                see others’ annotations and make their own.\n              </ProjectSectionText>\n            </div>\n            <div className=\"slice__sidebar-images\">\n              <Image\n                className=\"slice__sidebar-image\"\n                srcSet={`${sliceSidebarLayers} 300w, ${sliceSidebarLayersLarge} 700w`}\n                placeholder={sliceSidebarLayersPlaceholder}\n                alt=\"The layers sidebar design, now with user profiles.\"\n                sizes={`(max-width: ${media.mobile}px) 200px, 343px`}\n              />\n              <Image\n                className=\"slice__sidebar-image\"\n                srcSet={`${sliceSidebarAnnotations} 300w, ${sliceSidebarAnnotationsLarge} 700w`}\n                placeholder={sliceSidebarAnnotationsPlaceholder}\n                alt=\"Multiple user annotations on a shared layer.\"\n                sizes={`(max-width: ${media.mobile}px) 200px, 343px`}\n              />\n            </div>\n          </ProjectSectionColumns>\n        </ProjectSection>\n        <ProjectSection light>\n          <ProjectSectionContent>\n            <ProjectTextRow>\n              <ProjectSectionHeading>Improving the experience</ProjectSectionHeading>\n              <ProjectSectionText>\n                A problem we heard about often form users was that it was difficult to\n                find images they had previously seen or worked on. To solve this we added\n                a new tab that lists all previously annotated slides. In addition, we\n                added the ability to favorite slides, so if users find an interesting\n                slide they want to annotate later, they can easily save it to their\n                account.\n              </ProjectSectionText>\n            </ProjectTextRow>\n            <Image\n              srcSet={`${sliceSlides} 800w, ${sliceSlidesLarge} 1440w`}\n              placeholder={sliceSlidesPlaceholder}\n              alt=\"The new My Slides tab in slice, showing annotated and favorited slides.\"\n              sizes={`(max-width: ${media.mobile}px) 500px, (max-width: ${media.tablet}px) 800px, 1000px`}\n            />\n          </ProjectSectionContent>\n        </ProjectSection>\n        <ProjectSection>\n          <ProjectSectionContent className=\"slice__grid\">\n            <div className=\"slice__grid-image\">\n              <div className=\"slice__grid-background\">\n                <Image\n                  srcSet={`${sliceBackgroundBar} 400w, ${sliceBackgroundBarLarge} 898w`}\n                  placeholder={sliceBackgroundBarPlaceholder}\n                  alt=\"\"\n                  role=\"presentation\"\n                  sizes={`(max-width: ${media.mobile}px) 312px, (max-width: ${media.tablet}px) 408px, 514px`}\n                />\n              </div>\n              <div className=\"slice__grid-foreground\">\n                <Image\n                  srcSet={`${sliceAnnotation} 440w, ${sliceAnnotationLarge} 880w`}\n                  placeholder={sliceAnnotationPlaceholder}\n                  alt=\"An annotation preview popover with statistics for shape perimeter and area.\"\n                  sizes={`(max-width: ${media.mobile}px) 584px, (max-width: ${media.tablet}px) 747px, 556px`}\n                />\n              </div>\n            </div>\n            <div className=\"slice__grid-text\">\n              <ProjectSectionHeading>Meaningful details</ProjectSectionHeading>\n              <ProjectSectionText>\n                Marking and annotating areas on high resolution biomedical images is the\n                core experience of the app, and it was easy to get lost or lose sense of\n                scale when zooming in on details. Adding measurements for the perimeter\n                and area of an annotation both helped to communicate the overall scale of\n                the image and how large the annotated feature is in comparison.\n              </ProjectSectionText>\n            </div>\n          </ProjectSectionContent>\n        </ProjectSection>\n      </ProjectContainer>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default ProjectSlice;\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (!src && !srcSet) {\n        throw new Error('No image src or srcSet provided');\n      }\n\n      const tempImage = new Image();\n\n      if (src) {\n        tempImage.src = src;\n      }\n\n      if (srcSet) {\n        tempImage.srcset = srcSet;\n      }\n\n      if (sizes) {\n        tempImage.sizes = sizes;\n      }\n\n      const onLoad = () => {\n        tempImage.removeEventListener('load', onLoad);\n        const source = tempImage.currentSrc;\n        resolve(source);\n      };\n\n      tempImage.addEventListener('load', onLoad);\n    } catch (error) {\n      reject(`Error loading ${srcSet}: ${error}`);\n    }\n  });\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, width, height);\n  const image = canvas.toDataURL('image/png', '');\n  canvas.remove();\n  return image;\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n  const sources = srcSet.split(', ').map(srcString => {\n    const [src, width] = srcString.split(' ');\n    const image = generateImage(Number(width.replace('w', '')));\n    return { src, image, width };\n  });\n\n  const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ');\n  const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet });\n\n  const videoSrc = sources.find(src => src.image === fakeSrc);\n  return videoSrc.src;\n}\n"],"names":["className","Date","getFullYear","Link","secondary","href","target","children","level","as","align","weight","rest","clampedLevel","Math","min","max","Component","Fragment","Helmet","rel","GothamBold","crossorigin","classNames","ImageElements","onLoad","loaded","inViewport","srcSet","placeholder","delay","src","alt","play","reveal","prefersReducedMotion","usePrefersReducedMotion","showPlaceholder","setShowPlaceholder","useState","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","videoSrc","setVideoSrc","placeholderRef","useRef","videoRef","isVideo","endsWith","imgSrc","split","showFullRes","prerender","useEffect","purgePlaceholder","placeholderElement","current","addEventListener","removeEventListener","async","resolvedVideoSrc","resolveVideoSrcFromSrcSet","resolveVideoSrc","width","height","pause","togglePlaying","event","preventDefault","paused","handleFocusPlayButton","onMouseOver","undefined","onMouseOut","style","numToMs","muted","loop","playsInline","autoPlay","role","onLoadStart","ref","Transition","in","onExit","reflow","onExited","timeout","enter","exit","msToNum","tokens","status","VisuallyHidden","visible","Button","onFocus","onBlur","onClick","Icon","icon","decoding","raised","setLoaded","themeId","useTheme","containerRef","useInViewport","useCallback","VALID_EXT","isValidExtension","includes","pop","isAnchor","relValue","targetValue","RouterLink","to","onMouseUp","blurOnMouseUp","ProjectHeader","title","description","linkLabel","url","roles","Section","Heading","Text","size","iconHoverShift","length","map","index","initDelay","ProjectContainer","ProjectSection","forwardRef","light","first","fullHeight","backgroundOverlayOpacity","backgroundElement","ProjectBackground","opacity","entered","offset","useParallax","numToPx","Image","ProjectImage","ProjectSectionContent","ProjectSectionHeading","ProjectSectionText","ProjectTextRow","center","stretch","justify","noMargin","centerMobile","ProjectSectionColumns","centered","useScrollRestore","name","content","sliceBackground","sliceBackgroundLarge","sliceBackgroundPlaceholder","sliceApp","sliceAppLarge","sliceAppPlaceholder","sizes","media","sliceSidebarLayers","sliceSidebarLayersLarge","sliceSidebarLayersPlaceholder","sliceSidebarAnnotations","sliceSidebarAnnotationsLarge","sliceSidebarAnnotationsPlaceholder","sliceSlides","sliceSlidesLarge","sliceSlidesPlaceholder","sliceBackgroundBar","sliceBackgroundBarLarge","sliceBackgroundBarPlaceholder","sliceAnnotation","sliceAnnotationLarge","sliceAnnotationPlaceholder","Footer","getImageFromSrcSet","Promise","resolve","reject","Error","tempImage","srcset","source","currentSrc","error","sources","srcString","image","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","remove","generateImage","Number","replace","fakeSrcSet","join","fakeSrc","find"],"sourceRoot":""}