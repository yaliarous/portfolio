{"version":3,"file":"static/js/172.e6318950.chunk.js","mappings":"oNASA,MAAMA,EAAS,CACb,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SACf,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,UAGhBC,EACG,QADHA,EAEG,QAkBT,MAAMC,EAAc,EAClBC,KAAAA,EACAC,MAAAA,GAAQ,EACRC,MAAOC,EAAa,EACpBC,UAAAA,KACGC,MAEH,MAAMC,GAASC,EAAAA,EAAAA,QAAO,CAAC,CAAEC,KAAMV,EAAgBW,MAAO,MAChDC,GAAYH,EAAAA,EAAAA,UACZI,GAAeC,EAAAA,EAAAA,MA+CrB,OA7CAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAoBJ,EAAUK,QAC9BC,EAAUhB,EAAKiB,MAAM,IAC3B,IAAIC,EAEJ,MAAMC,EAAe,KACnB,MAAMC,EAAed,EAAOS,QAAQM,KAAIC,GAC9B,8BAA6BA,EAAKd,SAASc,EAAKb,iBAG1DK,EAAkBS,UAAYH,EAAaI,KAAK,KAG5CC,GAAchB,EAAAA,EAAAA,IAAM,GAAGiB,IAC3BpB,EAAOS,QAxCb,SAAiBC,EAASV,EAAQoB,GAChC,OAAOV,EAAQK,KAAI,CAACZ,EAAOkB,KACzB,GAAIA,EAAQD,EACV,MAAO,CAAElB,KAAMV,EAAgBW,MAAAA,GAGjC,GAAIiB,EAAW,EAAI,GAAK,CACtB,MAAME,EAAOC,KAAKC,MAAMD,KAAKE,SAAWlC,EAAOmC,QAC/C,MAAO,CAAExB,KAAMV,EAAgBW,MAAOZ,EAAO+B,IAG/C,MAAO,CAAEpB,KAAMV,EAAgBW,MAAOH,EAAOqB,GAAOlB,UA6BjCwB,CAAQjB,EAASV,EAAOS,QAASW,GAClDP,OAuBF,OApBIlB,GAAUiB,GAAcP,GAAiBuB,EAAAA,IAC3ChB,GAAYiB,EAAAA,EAAAA,KACVjC,EAAAA,EAAAA,IAAMC,IACNiC,EAAAA,EAAAA,IAAO,CACLC,KAAM,EACNC,GAAItB,EAAQgB,OACZO,UAAW,EACXC,QAAS,KAEXvC,MAAMwB,IAGNd,IACFL,EAAOS,QAAUC,EAAQK,KAAI,CAACZ,EAAOkB,KAAR,CAC3BnB,KAAMV,EACNW,MAAOO,EAAQW,OAEjBR,KAGK,KACDD,GACFA,EAAUuB,UAGb,CAAC9B,EAAcV,EAAOE,EAAYH,KAGnC,kBAAMI,UAAWsC,GAAAA,CAAW,eAAgBtC,MAAgBC,EAA5D,WACE,SAACsC,EAAA,EAAD,CAAgBvC,UAAU,sBAA1B,SAAiDJ,KACjD,iBAAM,iBAAYI,UAAU,wBAAwBwC,IAAKlC,QAK/D,GAAemC,EAAAA,EAAAA,MAAK9C,I,+FCzGpB,MA8CA,EA9CgB,EACd+C,SAAAA,EACAC,MAAAA,EAAQ,EACRC,GAAAA,EACAC,MAAAA,EAAQ,OACRC,OAAAA,EAAS,SACT9C,UAAAA,KACGC,MAEH,MAAM8C,EAAetB,KAAKuB,IAAIvB,KAAKwB,IAAIN,EAAO,GAAI,GAC5CO,EAAYN,GAAO,IAAGnB,KAAKwB,IAAIF,EAAc,KAEnD,OACE,UAAC,EAAAI,SAAD,WAEc,SAAXL,IACC,UAACM,EAAA,EAAD,YACE,iBAAMC,IAAI,UAAUC,KAAMC,EAAYX,GAAG,OAAOY,YAAY,MAC5D,2BACI,qIAIaD,gGAOrB,SAACL,EAAD,CACElD,UAAWsC,GAAAA,CACTtC,EACA,UACC,kBAAiB6C,IACjB,kBAAiBE,IACjB,mBAAkBD,QAEjB7C,EARN,SAUGyC,S,iEC3CT,MA6BA,EA7Ba,EACXA,SAAAA,EACAe,KAAAA,EAAO,IACPb,GAAIM,EAAY,IAChBL,MAAAA,EAAQ,OACRC,OAAAA,EAAS,OACTY,UAAAA,EACA1D,UAAAA,KACGC,MAGD,SAACiD,EAAD,CACElD,UAAWsC,GAAAA,CACTtC,EACA,OACC,eAAc6C,IACd,cAAaY,IACb,gBAAeX,IAChB,CACE,kBAAmBY,OAGnBzD,EAXN,SAaGyC,K,iLC2EP,QAzFA,WACE,OACE,qBAAS1C,UAAU,WAAnB,WACE,UAACoD,EAAA,EAAD,YACE,kBAAOO,IAAI,QAAX,8BACA,iBAAMC,KAAK,cAAchD,QAAQ,oDAEnC,SAACiD,EAAA,GAAD,CAAYC,QAAM,EAACC,IAAI,EAAMC,QAAS,EAAGC,QAASC,EAAAA,GAAlD,SACGC,IACC,UAAC,EAAAhB,SAAD,YACE,gBAAKnD,UAAU,oBAAf,UACE,iBAAKA,UAAU,iBAAf,WACE,SAACoE,EAAA,EAAD,CACEpE,UAAWsC,GAAAA,CAAW,kBAAoB,oBAAmB6B,KAC7DxB,MAAO,EAFT,kBAMA,SAACyB,EAAA,EAAD,CACE,iBACApE,UAAWsC,GAAAA,CACT,uBACC,yBAAwB6B,KAE3BvB,GAAG,KACHD,MAAO,EAPT,UASE,SAAChD,EAAA,EAAD,CACEC,KAAK,kBACLC,MAAkB,WAAXsE,EACPrE,MAAO,SAGX,SAACuE,EAAA,EAAD,CACErE,UAAWsC,GAAAA,CACT,wBACC,0BAAyB6B,KAH9B,0HASA,SAACG,EAAA,EAAD,CACEZ,WAAS,EACTa,gBAAc,EACdvE,UAAWsC,GAAAA,CACT,mBACC,qBAAoB6B,KAEvBb,KAAK,IACLkB,KAAK,eARP,oCAeJ,iBACExE,UAAWsC,GAAAA,CACT,4BACC,8BAA6B6B,KAHlC,WAME,kBACEM,UAAQ,EACRC,OAAK,EACLC,MAAI,EACJC,aAAW,EACX5E,UAAWsC,GAAAA,CAAW,kBAAoB,oBAAmB6B,KAC7DU,OAAQC,EANV,UAQE,mBAAQC,IAAKC,EAAU5E,KAAK,iBAE9B,cACEJ,UAAWsC,GAAAA,CAAW,mBAAqB,qBAAoB6B,KAC/Db,KAAK,iCACL2B,OAAO,SACP5B,IAAI,sBAJN,gD","sources":["components/DecoderText/index.js","components/Heading/index.js","components/Text/index.js","pages/404/index.js"],"sourcesContent":["import { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion } from 'hooks';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport prerender from 'utils/prerender';\nimport './index.css';\n\n// prettier-ignore\nconst glyphs = [\n  'ア', 'イ', 'ウ', 'エ', 'オ',\n  'カ', 'キ', 'ク', 'ケ', 'コ',\n  'サ', 'シ', 'ス', 'セ', 'ソ',\n  'タ', 'チ', 'ツ', 'テ', 'ト',\n  'ナ', 'ニ', 'ヌ', 'ネ', 'ノ',\n  'ハ', 'ヒ', 'フ', 'ヘ', 'ホ',\n  'マ', 'ミ', 'ム', 'メ', 'モ',\n  'ヤ', 'ユ', 'ヨ', 'ー',\n  'ラ', 'リ', 'ル', 'レ', 'ロ',\n  'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン',\n  'ガ', 'ギ', 'グ', 'ゲ', 'ゴ',\n  'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',\n  'ダ', 'ヂ', 'ヅ', 'デ', 'ド',\n  'バ', 'ビ', 'ブ', 'ベ', 'ボ',\n  'パ', 'ピ', 'プ', 'ペ', 'ポ',\n];\n\nconst CharType = {\n  Glyph: 'glyph',\n  Value: 'value',\n};\n\nfunction shuffle(content, output, position) {\n  return content.map((value, index) => {\n    if (index < position) {\n      return { type: CharType.Value, value };\n    }\n\n    if (position % 1 < 0.5) {\n      const rand = Math.floor(Math.random() * glyphs.length);\n      return { type: CharType.Glyph, value: glyphs[rand] };\n    }\n\n    return { type: CharType.Glyph, value: output[index].value };\n  });\n}\n\nconst DecoderText = ({\n  text,\n  start = true,\n  delay: startDelay = 0,\n  className,\n  ...rest\n}) => {\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\n  const container = useRef();\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const containerInstance = container.current;\n    const content = text.split('');\n    let animation;\n\n    const renderOutput = () => {\n      const characterMap = output.current.map(item => {\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\n      });\n\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    const springValue = value(0, position => {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion && !prerender) {\n      animation = chain(\n        delay(startDelay),\n        spring({\n          from: 0,\n          to: content.length,\n          stiffness: 8,\n          damping: 5,\n        })\n      ).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map((value, index) => ({\n        type: CharType.Value,\n        value: content[index],\n      }));\n      renderOutput();\n    }\n\n    return () => {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n\n  return (\n    <span className={classNames('decoder-text', className)} {...rest}>\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\n    </span>\n  );\n};\n\nexport default memo(DecoderText);\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import classNames from 'classnames';\nimport './index.css';\n\nconst Text = ({\n  children,\n  size = 'm',\n  as: Component = 'p',\n  align = 'auto',\n  weight = 'auto',\n  secondary,\n  className,\n  ...rest\n}) => {\n  return (\n    <Component\n      className={classNames(\n        className,\n        'text',\n        `text--align-${align}`,\n        `text--size-${size}`,\n        `text--weight-${weight}`,\n        {\n          'text--secondary': secondary,\n        }\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { Helmet } from 'react-helmet';\nimport { Button } from 'components/Button';\nimport DecoderText from 'components/DecoderText';\nimport Notfound from 'assets/notfound.mp4';\nimport NotfoundPoster from 'assets/notfound.jpg';\nimport { reflow } from 'utils/transition';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nfunction NotFound() {\n  return (\n    <section className=\"page-404\">\n      <Helmet>\n        <title tag=\"title\">404 | Not Found</title>\n        <meta name=\"description\" content=\"404 page not found. This page doesn't exist\" />\n      </Helmet>\n      <Transition appear in={true} timeout={0} onEnter={reflow}>\n        {status => (\n          <Fragment>\n            <div className=\"page-404__details\">\n              <div className=\"page-404__text\">\n                <Heading\n                  className={classNames('page-404__title', `page-404__title--${status}`)}\n                  level={0}\n                >\n                  404\n                </Heading>\n                <Heading\n                  aria-hidden\n                  className={classNames(\n                    'page-404__subheading',\n                    `page-404__subheading--${status}`\n                  )}\n                  as=\"h2\"\n                  level={3}\n                >\n                  <DecoderText\n                    text=\"Error: Redacted\"\n                    start={status !== 'exited'}\n                    delay={300}\n                  />\n                </Heading>\n                <Text\n                  className={classNames(\n                    'page-404__description',\n                    `page-404__description--${status}`\n                  )}\n                >\n                  This page could not be found. It either doesn’t exist or was deleted. Or\n                  perhaps you don’t exist.\n                </Text>\n                <Button\n                  secondary\n                  iconHoverShift\n                  className={classNames(\n                    'page-404__button',\n                    `page-404__button--${status}`\n                  )}\n                  href=\"/\"\n                  icon=\"chevronRight\"\n                >\n                  Back to homepage\n                </Button>\n              </div>\n            </div>\n\n            <div\n              className={classNames(\n                'page-404__video-container',\n                `page-404__video-container--${status}`\n              )}\n            >\n              <video\n                autoPlay\n                muted\n                loop\n                playsInline\n                className={classNames('page-404__video', `page-404__video--${status}`)}\n                poster={NotfoundPoster}\n              >\n                <source src={Notfound} type=\"video/mp4\" />\n              </video>\n              <a\n                className={classNames('page-404__credit', `page-404__credit--${status}`)}\n                href=\"https://twitter.com/ruinergame\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Animation from Ruiner\n              </a>\n            </div>\n          </Fragment>\n        )}\n      </Transition>\n    </section>\n  );\n}\n\nexport default NotFound;\n"],"names":["glyphs","CharType","DecoderText","text","start","delay","startDelay","className","rest","output","useRef","type","value","container","reduceMotion","usePrefersReducedMotion","useEffect","containerInstance","current","content","split","animation","renderOutput","characterMap","map","item","innerHTML","join","springValue","position","index","rand","Math","floor","random","length","shuffle","prerender","chain","spring","from","to","stiffness","damping","stop","classNames","VisuallyHidden","ref","memo","children","level","as","align","weight","clampedLevel","min","max","Component","Fragment","Helmet","rel","href","GothamBold","crossorigin","size","secondary","tag","name","Transition","appear","in","timeout","onEnter","reflow","status","Heading","Text","Button","iconHoverShift","icon","autoPlay","muted","loop","playsInline","poster","NotfoundPoster","src","Notfound","target"],"sourceRoot":""}